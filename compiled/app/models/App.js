// Generated by CoffeeScript 1.6.3
(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.App = (function(_super) {
    __extends(App, _super);

    function App() {
      _ref = App.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    App.prototype.initialize = function() {
      var dealerH, deck, playerH,
        _this = this;
      this.set('deck', deck = new Deck());
      this.set('playerHand', deck.dealPlayer());
      this.set('dealerHand', deck.dealDealer());
      dealerH = this.get('dealerHand');
      playerH = this.get('playerHand');
      playerH.on('turnOver', function() {
        if (dealerH.models.length < 3) {
          dealerH.models[0].flip();
          if (dealerH.scores() > 16) {
            dealerH.gameOver();
          }
        }
        while (dealerH.scores() < 17) {
          dealerH.hit();
        }
        if (dealerH.scores() < 21) {
          if (dealerH.scores() > playerH.scores()) {
            return alert('dealer wins!');
          } else if (dealerH.scores() === playerH.scores()) {
            return alert('draw!');
          } else {
            return alert('player wins');
          }
        }
      });
      playerH.on('busted', function() {
        return alert("player busted");
      });
      playerH.on('blackJack', function() {
        return alert("player blackJack!");
      });
      dealerH.on('busted', function() {
        return alert("dealer busted");
      });
      dealerH.on('blackJack', function() {
        console.log('blackJack listened!');
        return alert("dealer blackJack!");
      });
      return setTimeout(function() {
        playerH.checkBlackJack();
        return 0;
      });
    };

    return App;

  })(Backbone.Model);

}).call(this);

/*
//@ sourceMappingURL=App.map
*/
